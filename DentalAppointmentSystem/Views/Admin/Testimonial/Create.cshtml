@model DentalAppointmentSystem.Models.Testimonial
@{
    Layout = "~/Views/Shared/AdminLayout.cshtml";
}

<div class="container mt-4">
    <h2 class="mb-4">Add Testimonial</h2>

    <form asp-controller="Testimonial" asp-action="Create" method="post" enctype="multipart/form-data">
        @Html.AntiForgeryToken() <!-- تضمين توكن CSRF -->

        <div class="form-group mb-3">
            <label asp-for="Name" class="form-label"></label>
            <input asp-for="Name" class="form-control" />
            <span asp-validation-for="Name" class="text-danger"></span>
        </div>

        <div class="form-group mb-3">
            <label asp-for="Text" class="form-label"></label>
            <textarea asp-for="Text" class="form-control" rows="3"></textarea>
            <span asp-validation-for="Text" class="text-danger"></span>
        </div>

        <div class="form-group mb-3">
            <label asp-for="Rating" class="form-label"></label>
            <input asp-for="Rating" class="form-control" type="number" min="1" max="5" />
            <span asp-validation-for="Rating" class="text-danger"></span>
        </div>

        <div class="form-group mb-3">
            <label asp-for="Image" class="form-label"></label>
            <input type="file" asp-for="Image" class="form-control" />
            <span asp-validation-for="Image" class="text-danger"></span>
        </div>

        <button type="submit" class="btn btn-primary">Add Testimonial</button>
        <a asp-action="AdminIndex" asp-controller="Testimonial" class="btn btn-secondary ms-2">Back to AdminIndex</a> <!-- زر العودة إلى AdminIndex -->
    </form>
</div>

@section Scripts {
        <script>
            // Example of client-side form validation handling
            document.addEventListener("DOMContentLoaded", function() {
                const form = document.querySelector("form");
                form.addEventListener("submit", function(event) {
                    // Optionally, add custom validation or alerts before submission
                    // e.g., Validate rating input to ensure it's within the acceptable range
                    const ratingInput = form.querySelector('input[name="Rating"]');
                    if (ratingInput && (ratingInput.value < 1 || ratingInput.value > 5)) {
                        event.preventDefault();
                        alert('Please enter a rating between 1 and 5.');
                    }
                });
            });
        </script>
}
